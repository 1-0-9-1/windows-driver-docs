<html xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns:mssdk="winsdk" xmlns:script="urn:script" xmlns:build="urn:build" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
<meta name="Description" content="Controlling a General I/O Target's State in UMDF"/>
<meta name="MSHAttr" content="PreferredSiteName:MSDN"/>
<meta name="MSHAttr" content="PreferredLib:/library/windows/hardware"/>
<title>Controlling a General I/O Target's State in UMDF</title>

<meta name="MS-HAID" content="umdfobjectdg_70a4a7d6-1821-4830-8d35-98d158e99347.xml"/>
<meta name="MS-HAID" content="umdf.controlling_a_general_i_o_target_s_state_in_umdf"/>
<meta name="MS-HAID" content="wdf.controlling_a_general_i_o_target_s_state_in_umdf"/>


<link rel="STYLESHEET" type="text/css" HREF="../common/backsdk4.css"/>


</head>
<body>

<div id="mainSection">
<div class="clsServerSDKContent">
<h1><a id="wdf.controlling_a_general_i_o_target_s_state_in_umdf"></a>Controlling a General I/O Target's State in UMDF</h1>
</div>
<p class="CCE_Message">[This topic applies to UMDF 1.<i>x</i>.]</p>
<p>The framework defines the following states for general I/O targets:</p>
<p></p>
<dl>
<dt><a id="Started"></a><a id="started"></a><a id="STARTED"></a><b>Started</b></dt>
<dd>
<p>The I/O target is open (that is, available to the UMDF driver) and the driver can send I/O requests to it. The framework delivers the requests to the appropriate driver. </p>
</dd>
<dt><a id="Stopped"></a><a id="stopped"></a><a id="STOPPED"></a><b>Stopped</b></dt>
<dd>
<p>The I/O target is open, but the UMDF driver cannot send I/O requests to the I/O target unless the driver passes the WDF_REQUEST_SEND_OPTION_IGNORE_TARGET_STATE flag to the <i>Flags</i> parameter in a call to the <a href="wdf.iwdfiorequest_send"><b>IWDFIoRequest::Send</b></a> method. </p>
<p>The framework stops delivering requests to the appropriate driver. </p>
</dd>
<dt><a id="Closed_for_Query-Remove_______"></a><a id="closed_for_query-remove_______"></a><a id="CLOSED_FOR_QUERY-REMOVE_______"></a><b>Closed for Query-Remove
      </b></dt>
<dd>
<p>The I/O target is temporarily closed because its device might soon be removed. </p>
</dd>
<dt><a id="Closed"></a><a id="closed"></a><a id="CLOSED"></a><b>Closed</b></dt>
<dd>
<p>The I/O target is closed and cannot be started or stopped. </p>
</dd>
<dt><a id="Deleted"></a><a id="deleted"></a><a id="DELETED"></a><b>Deleted</b></dt>
<dd>
<p>The I/O target's device has been removed. </p>
</dd>
</dl>
<p>The <a href="wdf.wdf_io_target_state"><b>WDF_IO_TARGET_STATE</b></a> enumeration defines the values that represent these states. </p>
<h3><a id="local_i_o_target_states"></a><a id="LOCAL_I_O_TARGET_STATES"></a>Local I/O Target States</h3>
<p>The framework automatically opens and starts local I/O targets. </p>
<p>If necessary, the driver can call <a href="wdf.iwdfiotargetstatemanagement_stop"><b>IWDFIoTargetStateManagement::Stop</b></a> to temporarily stop a local I/O target and call <a href="wdf.iwdfiotargetstatemanagement_start"><b>IWDFIoTargetStateManagement::Start</b></a> to restart it. For example, the driver might stop a local I/O target if it detects a temporary error condition and then restart the I/O target if the error condition is corrected. </p>
<p>If a local I/O target's device is removed, the framework automatically stops and closes the I/O target and <a href="canceling_i_o_requests.htm">cancels</a> all I/O requests that are in the target's queue. The framework notifies the driver that the device is no longer available by calling device object event callback functions. For more information about these callback functions, see <a href="pnp_and_power_management_scenarios_in_umdf.htm">PnP and Power Management Scenarios in UMDF</a>.</p>
<p>Drivers can call <a href="wdf.iwdfiotargetstatemanagement_getstate"><b>IWDFIoTargetStateManagement::GetState</b></a> to obtain the current state of a local I/O target.</p>
<h3><a id="remote_i_o_target_states"></a><a id="REMOTE_I_O_TARGET_STATES"></a>Remote I/O Target States</h3>
<p>Drivers must call <a href="wdf.iwdfremotetarget_openfilebyname"><b>IWDFRemoteTarget::OpenFileByName</b></a> or <a href="wdf.iwdfremotetarget_openremoteinterface"><b>IWDFRemoteTarget::OpenRemoteInterface</b></a> to open remote I/O targets. When a driver opens a remote I/O target, the framework automatically starts the I/O target. </p>
<p>If necessary, the driver can call <a href="wdf.iwdfremotetarget_stop"><b>IWDFRemoteTarget::Stop</b></a> to temporarily stop a remote I/O target and call <a href="wdf.iwdfremotetarget_start"><b>IWDFRemoteTarget::Start</b></a> to restart it. </p>
<p>If a remote I/O target's device is removed, the framework automatically stops and closes the I/O target and cancels all I/O requests that are in the target's queue, unless the driver registers the following event callback functions: </p>
<p></p>
<dl>
<dt><a id="_________IRemoteTargetCallbackRemoval__OnRemoteTargetQueryRemove________"></a><a id="_________iremotetargetcallbackremoval__onremotetargetqueryremove________"></a><a id="_________IREMOTETARGETCALLBACKREMOVAL__ONREMOTETARGETQUERYREMOVE________"></a><a href="wdf.iremotetargetcallbackremoval_onremotetargetqueryremove"><b>
        IRemoteTargetCallbackRemoval::OnRemoteTargetQueryRemove
       </b></a></dt>
<dd>
<p>Informs the driver that a remote I/O target's device might be removed. Your driver must call <a href="wdf.iwdfremotetarget_closeforqueryremove"><b>IWDFRemoteTarget::CloseForQueryRemove</b></a> if you want the driver to allow removal of the device.</p>
</dd>
<dt><a id="_________IRemoteTargetCallbackRemoval__OnRemoteTargetRemoveComplete________"></a><a id="_________iremotetargetcallbackremoval__onremotetargetremovecomplete________"></a><a id="_________IREMOTETARGETCALLBACKREMOVAL__ONREMOTETARGETREMOVECOMPLETE________"></a><a href="wdf.iremotetargetcallbackremoval_onremotetargetremovecomplete"><b>
        IRemoteTargetCallbackRemoval::OnRemoteTargetRemoveComplete
       </b></a></dt>
<dd>
<p>Informs the driver that a remote I/O target's device has been removed. This callback function must call <a href="wdf.iwdfremotetarget_close"><b>IWDFRemoteTarget::Close</b></a>.</p>
</dd>
<dt><a id="_________IRemoteTargetCallbackRemoval__OnRemoteTargetRemoveCanceled________"></a><a id="_________iremotetargetcallbackremoval__onremotetargetremovecanceled________"></a><a id="_________IREMOTETARGETCALLBACKREMOVAL__ONREMOTETARGETREMOVECANCELED________"></a><a href="wdf.iremotetargetcallbackremoval_onremotetargetremovecanceled"><b>
        IRemoteTargetCallbackRemoval::OnRemoteTargetRemoveCanceled
       </b></a></dt>
<dd>
<p>Informs the driver that an attempt to remove a remote I/O target's device has been canceled. If you want the driver to continue to use the target, the driver must call <a href="wdf.iwdfremotetarget_reopen"><b>IWDFRemoteTarget::Reopen</b></a>. Typically, a driver calls <b>Reopen</b> from within the <b>OnRemoteTargetRemoveCanceled</b> callback function, but <b>Reopen</b> can instead be called after <b>OnRemoteTargetRemoveCanceled</b> returns. </p>
</dd>
</dl>
<p>Drivers can call <a href="wdf.iwdfremotetarget_getstate"><b>IWDFRemoteTarget::GetState</b></a> to obtain the current state of a remote I/O target.</p>
<p> </p>
<p> </p>
<p><a href="mailto:wsddocfb@microsoft.com?subject=Documentation%20feedback [wdf\wdf]:%20Controlling a General I/O Target's State in UMDF%20 RELEASE:%20(3/15/2016)&amp;body=%0A%0APRIVACY STATEMENT%0A%0AWe use your feedback to improve the documentation. We don't use your email address for any other purpose, and we'll remove your email address from our system after the issue that you're reporting is fixed. While we're working to fix this issue, we might send you an email message to ask for more info. Later, we might also send you an email message to let you know that we've addressed your feedback.%0A%0AFor more info about Microsoft's privacy policy, see http://privacy.microsoft.com/en-us/default.aspx." title="Send comments about this topic to Microsoft">Send comments about this topic to Microsoft</a></p>
</div>
<p style="text-align:left;font-family:Arial,sanserif;font-size:100%;color:black">
&#x00a9;&#x00a0;2016 Microsoft. All rights reserved.</p>

</body>
</html>
