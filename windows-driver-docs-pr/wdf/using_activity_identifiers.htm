<html xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns:mssdk="winsdk" xmlns:script="urn:script" xmlns:build="urn:build" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
<meta name="Description" content="Using Activity Identifiers"/>
<meta name="MSHAttr" content="PreferredSiteName:MSDN"/>
<meta name="MSHAttr" content="PreferredLib:/library/windows/hardware"/>
<title>Using Activity Identifiers</title>

<meta name="MS-HAID" content="umdf.using_activity_identifiers"/>
<meta name="MS-HAID" content="wdf.using_activity_identifiers"/>


<link rel="STYLESHEET" type="text/css" HREF="../common/backsdk4.css"/>


</head>
<body>

<div id="mainSection">
<div class="clsServerSDKContent">
<h1><a id="wdf.using_activity_identifiers"></a>Using Activity Identifiers</h1>
</div>
<p>In framework versions 1.11 and later, UMDF drivers can set and retrieve activity identifiers (IDs). Activity IDs allow you to associate multiple I/O requests, so that you can track them using Event Tracing for Windows  (ETW) tracing. This topic describes some possible scenarios in which the driver might use activity IDs.</p>
<h2><a id="Associating_New_Requests_with_an_Existing_Request"></a><a id="associating_new_requests_with_an_existing_request"></a><a id="ASSOCIATING_NEW_REQUESTS_WITH_AN_EXISTING_REQUEST"></a>Associating New Requests with an Existing Request</h2>
<p>In your driver's I/O dispatch callback function, you might create multiple framework I/O requests as a result of an incoming request.
 
The driver obtains the activity ID from the original request and sets it in the new requests by calling <a href="wdf.wdfrequestretrieveactivityid"><b>WdfRequestRetrieveActivityId</b></a> and <a href="wdf.wdfrequestsetactivityid"><b>WdfRequestSetActivityId</b></a>.</p>
<p>For a code example, see <a href="wdf.wdfrequestretrieveactivityid"><b>WdfRequestRetrieveActivityId</b></a>.</p>
<h2><a id="Associating_New_Requests_with_an_Existing_Thread"></a><a id="associating_new_requests_with_an_existing_thread"></a><a id="ASSOCIATING_NEW_REQUESTS_WITH_AN_EXISTING_THREAD"></a>Associating New Requests with an Existing Thread</h2>
<p>  
A driver might create a new I/O request in a thread other than the I/O dispatch thread, or in a work item. You can set the activity ID for such a request from any corresponding request, or by using the activity ID associated with the I/O dispatch thread. The driver can retrieve the activity ID associated with the current thread by calling <a href="etw.eventactivityidcontrol_func"><b>EventActivityIdControl</b></a> and then calling <a href="wdf.wdfrequestsetactivityid"><b>WdfRequestSetActivityId</b></a> to set the identifier for each new I/O request.</p>
<p>If the driver calls the Win32 API to send an I/O request, it can retrieve the activity ID from the original request and propagate it to the thread. The I/O manager then applies the activity ID that is associated with the thread to any I/O request packets (IRPs) that it generates in response to the request.</p>
<p> </p>
<p> </p>
<p><a href="mailto:wsddocfb@microsoft.com?subject=Documentation%20feedback [wdf\wdf]:%20Using Activity Identifiers%20 RELEASE:%20(3/15/2016)&amp;body=%0A%0APRIVACY STATEMENT%0A%0AWe use your feedback to improve the documentation. We don't use your email address for any other purpose, and we'll remove your email address from our system after the issue that you're reporting is fixed. While we're working to fix this issue, we might send you an email message to ask for more info. Later, we might also send you an email message to let you know that we've addressed your feedback.%0A%0AFor more info about Microsoft's privacy policy, see http://privacy.microsoft.com/en-us/default.aspx." title="Send comments about this topic to Microsoft">Send comments about this topic to Microsoft</a></p>
</div>
<p style="text-align:left;font-family:Arial,sanserif;font-size:100%;color:black">
&#x00a9;&#x00a0;2016 Microsoft. All rights reserved.</p>

</body>
</html>
