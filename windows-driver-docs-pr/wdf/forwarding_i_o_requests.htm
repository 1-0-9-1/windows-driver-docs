<html xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns:mssdk="winsdk" xmlns:script="urn:script" xmlns:build="urn:build" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
<meta name="Description" content="Forwarding I/O Requests"/>
<meta name="MSHAttr" content="PreferredSiteName:MSDN"/>
<meta name="MSHAttr" content="PreferredLib:/library/windows/hardware"/>
<title>Forwarding I/O Requests</title>

<meta name="MS-HAID" content="Ch3_DFIoPackage_4cf5e878-1180-435a-8481-baf4bd5ce4a5.xml"/>
<meta name="MS-HAID" content="kmdf.forwarding_i_o_requests"/>
<meta name="MS-HAID" content="wdf.forwarding_i_o_requests"/>


<link rel="STYLESHEET" type="text/css" HREF="../common/backsdk4.css"/>


</head>
<body>

<div id="mainSection">
<div class="clsServerSDKContent">
<h1><a id="wdf.forwarding_i_o_requests"></a>Forwarding I/O Requests</h1>
</div>
<h2><a id="ddk_forwarding_i_o_requests_df"></a><a id="DDK_FORWARDING_I_O_REQUESTS_DF"></a></h2>
<p>When a driver receives an I/O request that it cannot process, it typically does one of the following:</p>
<ul>
<li>
<p>It forwards the received request to another driver.</p>
</li>
<li>
<p>It creates additional requests and sends them to another driver.</p>
</li>
</ul>
<p>Framework-based drivers forward requests by <a href="using_i_o_targets.htm">using I/O targets</a>, which represent other drivers on the system. Drivers can use any of the following techniques to forward a request to an I/O target:</p>
<ul>
<li>
<p>A driver can forward I/O requests to the next-lower driver by calling <a href="wdf.wdfdevicegetiotarget"><b>WdfDeviceGetIoTarget</b></a>,  followed by <a href="wdf.wdfrequestformatrequestusingcurrenttype"><b>WdfRequestFormatRequestUsingCurrentType</b></a>, and finally <a href="wdf.wdfrequestsend"><b>WdfRequestSend</b></a>.</p>
<p>This technique is useful only if the driver receives a request that it does not have to modify before forwarding. </p>
</li>
<li>
<p>A driver can call <a href="wdf.wdffdoinitsetfilter"><b>WdfFdoInitSetFilter</b></a> to register itself as a filter driver.</p>
<p>If a filter driver does not provide an I/O queue for a particular type of I/O request, the framework automatically forwards requests of that type to the next-lower driver.</p>
</li>
<li>
<p>Typically, a function driver examines each I/O request's contents. If a function driver cannot process a request, it might modify the request and forward it to an I/O target.  Or, it might create one or more new requests and send them to an I/O target.</p>
<p>The framework's I/O target object defines several methods for sending I/O requests to other drivers. For example, a driver can call <a href="wdf.wdfiotargetformatrequestforread"><b>WdfIoTargetFormatRequestForRead</b></a>, followed by <a href="wdf.wdfrequestsend"><b>WdfRequestSend</b></a>, to send a read request to an I/O target. For more information about I/O targets, see <a href="using_i_o_targets.htm">Using I/O Targets</a>.</p>
<p>Rarely, a driver writer might want to specify the contents of a request's underlying WDM <a href="kernel.i_o_stack_locations">I/O stack location</a> before sending a request to an I/O target. For those cases, the driver can call <a href="wdf.wdfrequestwdmformatusingstacklocation"><b>WdfRequestWdmFormatUsingStackLocation</b></a> before it calls    <a href="wdf.wdfrequestsend"><b>WdfRequestSend</b></a>.</p>
</li>
</ul>
<p>Sometimes, a driver must send the same request to several I/O targets, typically because the driver must send a single command to all of its devices. Before sending a request to an I/O target, the driver can call <a href="wdf.wdfrequestchangetarget"><b>WdfRequestChangeTarget</b></a> to verify that the I/O target is accessible.</p>
<p>The driver must eventually <a href="completing_i_o_requests.htm">complete</a> every request that it forwards to an I/O target, unless it sets the <a href="wdf.wdf_request_send_options_flags"><b>WDF_REQUEST_SEND_OPTION_SEND_AND_FORGET</b></a> flag when calling <a href="wdf.wdfrequestsend"><b>WdfRequestSend</b></a>. </p>
<p>Note that when a driver forwards a request, the framework does not literally transfer the framework request object from the sending driver to the receiving driver. Instead, the framework creates a new request object in the driver that receives the request. Only the request's underlying I/O request packet (<a href="kernel.irp"><b>IRP</b></a>) is transferred from one driver to another. </p>
<p> </p>
<p> </p>
<p><a href="mailto:wsddocfb@microsoft.com?subject=Documentation%20feedback [wdf\wdf]:%20Forwarding I/O Requests%20 RELEASE:%20(3/15/2016)&amp;body=%0A%0APRIVACY STATEMENT%0A%0AWe use your feedback to improve the documentation. We don't use your email address for any other purpose, and we'll remove your email address from our system after the issue that you're reporting is fixed. While we're working to fix this issue, we might send you an email message to ask for more info. Later, we might also send you an email message to let you know that we've addressed your feedback.%0A%0AFor more info about Microsoft's privacy policy, see http://privacy.microsoft.com/en-us/default.aspx." title="Send comments about this topic to Microsoft">Send comments about this topic to Microsoft</a></p>
</div>
<p style="text-align:left;font-family:Arial,sanserif;font-size:100%;color:black">
&#x00a9;&#x00a0;2016 Microsoft. All rights reserved.</p>

</body>
</html>
