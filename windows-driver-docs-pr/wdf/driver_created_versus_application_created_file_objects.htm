<html xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns:mssdk="winsdk" xmlns:script="urn:script" xmlns:build="urn:build" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
<meta name="Description" content="Driver-Created Versus Application-Created File Objects"/>
<meta name="MSHAttr" content="PreferredSiteName:MSDN"/>
<meta name="MSHAttr" content="PreferredLib:/library/windows/hardware"/>
<title>Driver-Created Versus Application-Created File Objects</title>

<meta name="MS-HAID" content="umdfobjectdg_3560ce25-2fac-4f7f-9429-832d336d9371.xml"/>
<meta name="MS-HAID" content="umdf.driver_created_versus_application_created_file_objects"/>
<meta name="MS-HAID" content="wdf.driver_created_versus_application_created_file_objects"/>


<link rel="STYLESHEET" type="text/css" HREF="../common/backsdk4.css"/>


</head>
<body>

<div id="mainSection">
<div class="clsServerSDKContent">
<h1><a id="wdf.driver_created_versus_application_created_file_objects"></a>Driver-Created Versus Application-Created File Objects</h1>
</div>
<p class="CCE_Message">[This topic applies to UMDF 1.<i>x</i>.]</p>
<p>When an application opens a handle to a device, the framework calls your driver's <a href="wdf.iqueuecallbackcreate_oncreatefile"><b>IQueueCallbackCreate::OnCreateFile</b></a> method and supplies a pointer to the <a href="wdf.iwdffile"><b>IWDFFile</b></a> interface for the file object that is associated with the device. Any I/O requests that the application sends to the opened handle are associated with the created file object. When such requests arrive, the framework calls the appropriate method from one of the driver-supplied <a href="wdf.umdf_queue_object_reference">UMDF Queue Object Interfaces</a>. The driver can then call <a href="wdf.iwdfiorequest_getfileobject"><b>IWDFIoRequest::GetFileObject</b></a> to determine the file object associated with the request.  The driver can call <a href="wdf.iwdfobject_assigncontext"><b>AssignContext</b></a> on the file object to associate context that is is specific to the I/O session.</p>
<p>The following table shows calls the application makes and the resulting notifications that the driver receives.</p>
<table>
<tr>
<th>Application initiates</th>
<th>Driver receives</th>
</tr>
<tr>
<td>
<p>A call to the Microsoft Win32 <a href="fs.createfile"><b>CreateFile</b></a> function.</p>
</td>
<td>
<p>A call to its <a href="wdf.iqueuecallbackcreate_oncreatefile"><b>IQueueCallbackCreate::OnCreateFile</b></a> method.</p>
</td>
</tr>
<tr>
<td>
<p>A call to the Win32 <b>ReadFileEx</b>, <b>WriteFileEx</b>, or <a href="base.deviceiocontrol"><b>DeviceIoControl</b></a> function.</p>
</td>
<td>
<p>A call to its <a href="wdf.iqueuecallbackread_onread"><b>IQueueCallbackRead::OnRead</b></a>, <a href="wdf.iqueuecallbackwrite_onwrite"><b>IQueueCallbackWrite::OnWrite</b></a>, or <a href="wdf.iqueuecallbackdeviceiocontrol_ondeviceiocontrol"><b>IQueueCallbackDeviceIoControl::OnDeviceIoControl</b></a> method.</p>
</td>
</tr>
<tr>
<td>
<p>A call to the Win32 <b>CloseHandle</b> function for the last open handle to the file object.</p>
</td>
<td>
<p>A call to its <a href="wdf.ifilecallbackcleanup_oncleanupfile"><b>IFileCallbackCleanup::OnCleanupFile</b></a> method.</p>
<p>The driver cancels or completes all I/O requests that are associated with the file object. </p>
<p>After the driver returns from the cleanup notification, UMDF cancels any pending I/O requests.</p>
<p>After cleanup completes and UMDF cancels pending I/O requests, the driver receives a call to its <a href="wdf.ifilecallbackclose_onclosefile"><b>IFileCallbackClose::OnCloseFile</b></a> method.</p>
</td>
</tr>
</table>
<p> </p>
<p>A system component may issue a create request on behalf of a Universal Windows app. If the driver needs to determine the process ID of the app that issued the create request, it can call the <a href="wdf.iwdffile3_getinitiatorprocessid"><b>IWDFFile3::GetInitiatorProcessId</b></a> method.</p>
<h2><a id="Driver-created_file_objects"></a><a id="driver-created_file_objects"></a><a id="DRIVER-CREATED_FILE_OBJECTS"></a>Driver-created file objects</h2>
<p>If your driver needs to create and send an  I/O request independent of the application to the next driver in the stack (the default I/O target), the driver must call <a href="wdf.iwdfdevice_createwdffile"><b>IWDFDevice::CreateWdfFile</b></a> to retrieve a pointer to a <a href="wdf.iwdfdrivercreatedfile"><b>IWDFDriverCreatedFile</b></a> interface. In this case, the next driver receives the same notifications that your driver receives when the application generates the request.</p>
<p>The following table shows calls your driver makes and the resulting notifications to the next driver in the stack.</p>
<table>
<tr>
<th>Driver initiates</th>
<th>Next driver in the stack receives</th>
</tr>
<tr>
<td>
<p>A call to the <a href="wdf.iwdfdevice_createwdffile"><b>IWDFDevice::CreateWdfFile</b></a> method.</p>
<p>The file object that UMDF creates represents an I/O session between the device and the next device in the stack.</p>
</td>
<td>
<p>A call to its <a href="wdf.iqueuecallbackcreate_oncreatefile"><b>IQueueCallbackCreate::OnCreateFile</b></a> method.</p>
</td>
</tr>
<tr>
<td>
<p>A call to the <a href="wdf.iwdfdevice_createrequest"><b>IWDFDevice::CreateRequest</b></a> method.</p>
<p>A call to format the request (for example, a call to the <a href="wdf.iwdfiotarget_formatrequestforioctl"><b>IWDFIoTarget::FormatRequestForIoctl</b></a> method).</p>
<p>A call to the <a href="wdf.iwdfiorequest_send"><b>IWDFIoRequest::Send</b></a> method.</p>
</td>
<td>
<p>A call to its <a href="wdf.iqueuecallbackread_onread"><b>IQueueCallbackRead::OnRead</b></a>, <a href="wdf.iqueuecallbackwrite_onwrite"><b>IQueueCallbackWrite::OnWrite</b></a>, or <a href="wdf.iqueuecallbackdeviceiocontrol_ondeviceiocontrol"><b>IQueueCallbackDeviceIoControl::OnDeviceIoControl</b></a> method.</p>
</td>
</tr>
<tr>
<td>
<p>A call to the <a href="wdf.iwdfdrivercreatedfile_close"><b>IWDFDriverCreatedFile::Close</b></a> method.</p>
</td>
<td>
<p>A call to its <a href="wdf.ifilecallbackcleanup_oncleanupfile"><b>IFileCallbackCleanup::OnCleanupFile</b></a> method.</p>
<p>The driver cancels or completes all I/O requests that are associated with the file object. </p>
<p>After the driver returns from the cleanup notification, UMDF cancels any pending I/O requests.</p>
<p>After cleanup completes and UMDF cancels pending I/O requests, the driver receives a call to its <a href="wdf.ifilecallbackclose_onclosefile"><b>IFileCallbackClose::OnCloseFile</b></a> method.</p>
</td>
</tr>
</table>
<p> </p>
<p>For the next device in the stack, no difference exists between the file object that is created by an application and the file object that is created by a higher-layer device.</p>
<p> </p>
<p> </p>
<p><a href="mailto:wsddocfb@microsoft.com?subject=Documentation%20feedback [wdf\wdf]:%20Driver-Created Versus Application-Created File Objects%20 RELEASE:%20(3/15/2016)&amp;body=%0A%0APRIVACY STATEMENT%0A%0AWe use your feedback to improve the documentation. We don't use your email address for any other purpose, and we'll remove your email address from our system after the issue that you're reporting is fixed. While we're working to fix this issue, we might send you an email message to ask for more info. Later, we might also send you an email message to let you know that we've addressed your feedback.%0A%0AFor more info about Microsoft's privacy policy, see http://privacy.microsoft.com/en-us/default.aspx." title="Send comments about this topic to Microsoft">Send comments about this topic to Microsoft</a></p>
</div>
<p style="text-align:left;font-family:Arial,sanserif;font-size:100%;color:black">
&#x00a9;&#x00a0;2016 Microsoft. All rights reserved.</p>

</body>
</html>
