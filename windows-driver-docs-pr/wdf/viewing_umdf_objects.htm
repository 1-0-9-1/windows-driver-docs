<html xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns:mssdk="winsdk" xmlns:script="urn:script" xmlns:build="urn:build" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
<meta name="Description" content="This topic describes how you can use the Wudfext.dll debugger extensions to view information about objects used by a User-Mode Driver Framework (UMDF) version 1 driver."/>
<meta name="MSHAttr" content="PreferredSiteName:MSDN"/>
<meta name="MSHAttr" content="PreferredLib:/library/windows/hardware"/>
<title>Viewing UMDF Objects</title>

<meta name="MS-HAID" content="umdfobjectdg_d258576a-d7e9-4ec7-88db-1589d3b6263b.xml"/>
<meta name="MS-HAID" content="umdf.viewing_umdf_objects"/>
<meta name="MS-HAID" content="wdf.viewing_umdf_objects"/>


<link rel="STYLESHEET" type="text/css" HREF="../common/backsdk4.css"/>


</head>
<body>

<div id="mainSection">
<div class="clsServerSDKContent">
<h1><a id="wdf.viewing_umdf_objects"></a>Viewing UMDF Objects</h1>
</div>
<p>This topic describes how you can use the Wudfext.dll debugger extensions to view information about objects used by a User-Mode Driver Framework (UMDF) version 1 driver.</p>
<p>Starting with UMDF version 2, you should instead use the Wdfkd.dll debugger extensions. For more info, see <a href="debugger.kernel_mode_driver_framework_extensions__wdfkd_dll_">Windows Driver Framework Extensions (Wdfkd.dll)</a>.</p>
<p>You can perform the following steps to view information about UMDF version 1 objects:</p>
<ol>
<li>Use one of the following UMDF debugger extensions to view device stacks that are in the host process:<ul>
<li><b>!wudfext.umdevstacks</b></li>
<li>
<p><b>!wudfext.umdevstack</b> as shown in the following example:</p>
<p><b> !wudfext.umdevstack &lt;dev-stack-addr&gt;</b></p>
<p>The information includes driver objects and device objects for each driver. Currently, UMDF allows only one device stack in a host process so there is no difference between the outputs of these two extensions.</p>
</li>
</ul>
</li>
<li>
<p>View the complete object tree by using the <b>!wudfext.wudfobject</b> UMDF debugger extension, as in the following example:</p>
<p><b>!wudfext.wudfobject &lt;IWDFDriver*&gt; 1</b></p>
</li>
<li>
<p>Use the <b>!wudfext.wudfdevice</b> UMDF debugger extension as shown in the following example to determine the Plug and Play (PnP) and power-management state of the device: </p>
<p><b>!wudfext.wudfdevice &lt;IWDFDevice*&gt;</b></p>
</li>
<li>Perform the following steps to determine the queues that are associated with the device:<ol>
<li>Use the <b>!wudfext.wudfdevicequeues</b> UMDF debugger extension to view the queues that are associated with the device. This extension shows queue properties, queue state, and driver-owned requests. </li>
<li>
<p>Use the <b>!wudfext.wudfqueue</b> UMDF debugger extension as shown in the following example to obtain information about each queue: </p>
<p><b>!wudfext.wudfqueue &lt;IWDFIoQueue*&gt;</b></p>
</li>
</ol>
</li>
<li>
<p>Use the <b>!wudfext.wudfrequest</b> UMDF debugger extension to obtain information about a particular request. This information includes the underlying user-mode I/O request packet (IRP). From the user-mode IRP information, you can determine where the request is currently being processed in the stack. You can also use the <b>!wudfext.umirp</b> UMDF debugger extension to obtain this user-mode IRP information. </p>
</li>
<li>
<p>Determine all I/O targets by: <ol>
<li>Using the <b>!wudfext.wudfobject</b> UMDF debugger extension to view the child objects of the device object. I/O target objects are child objects of the device object. </li>
<li>
<p>Using the <b>!wudfext.wudfiotarget</b> UMDF debugger extension as shown in the following example to view information about each I/O target object:</p>
<p><b>!wudfext.wudfiotarget &lt;IWDFTarget*&gt;</b></p>
<p>This extension shows the target's state and the list of sent requests. </p>
</li>
</ol>
</p>
<p>There is currently no UMDF debugger extension that allows you to view all I/O targets. </p>
</li>
<li>
<p>Use the following UMDF debugger extensions to view information about file objects:<p></p>
<dl>
<dt><a id="_wudfext.wudfrequest_or__wudfext.umirp"></a><a id="_WUDFEXT.WUDFREQUEST_OR__WUDFEXT.UMIRP"></a><b>!wudfext.wudfrequest</b> or <b>!wudfext.umirp</b></dt>
<dd>
<p>Use the <b>!wudfext.wudfrequest</b> or the <b>!wudfext.umirp</b> UMDF debugger extension to view files that are child objects of device objects. </p>
</dd>
<dt><a id="_wudfext.wudffile"></a><a id="_WUDFEXT.WUDFFILE"></a><b>!wudfext.wudffile</b></dt>
<dd>
<p>Use the <b>!wudfext.wudffile</b> UMDF debugger extension as shown in the following example to view information about a framework file:</p>
<p><b>!wudfext.wudffile &lt;IWDFFile*&gt;</b></p>
</dd>
<dt><a id="_wudfext.umfile"></a><a id="_WUDFEXT.UMFILE"></a><b>!wudfext.umfile</b></dt>
<dd>
<p>Use the <b>!wudfext.umfile</b> UMDF debugger extension as shown in the following example to view information about a UMDF intra-stack file (that is, a file object that a driver in the stack created as opposed to a file object that was created by an application or by a driver in another stack):</p>
<p><b>!wudfext.umfile &lt;addr&gt;</b></p>
<p>In some cases, there might not be a corresponding framework file, and user-mode IRP information might include a UMDF intra-stack file. </p>
<p>Information that <b>!wudfext.umfile</b> displays includes any IRPs that are queued to the UMDF intra-stack file. Only driver-created files track user-mode IRPs that are queued to those files. For application-created files, the I/O manager tracks the kernel-mode IRPs. </p>
</dd>
<dt><a id="_wudfext.umdevstacks_and__wudfext.umdevstack"></a><a id="_WUDFEXT.UMDEVSTACKS_AND__WUDFEXT.UMDEVSTACK"></a><b>!wudfext.umdevstacks</b> and <b>!wudfext.umdevstack</b></dt>
<dd>
<p>Use the output from the <b>!wudfext.umdevstacks</b> and <b>!wudfext.umdevstack</b> UMDF debugger  extensions to view outstanding UMDF intra-stack files that correspond to driver-created files. </p>
</dd>
</dl>
</p>
</li>
</ol>
<p> </p>
<p> </p>
<p><a href="mailto:wsddocfb@microsoft.com?subject=Documentation%20feedback [wdf\wdf]:%20Viewing UMDF Objects%20 RELEASE:%20(3/15/2016)&amp;body=%0A%0APRIVACY STATEMENT%0A%0AWe use your feedback to improve the documentation. We don't use your email address for any other purpose, and we'll remove your email address from our system after the issue that you're reporting is fixed. While we're working to fix this issue, we might send you an email message to ask for more info. Later, we might also send you an email message to let you know that we've addressed your feedback.%0A%0AFor more info about Microsoft's privacy policy, see http://privacy.microsoft.com/en-us/default.aspx." title="Send comments about this topic to Microsoft">Send comments about this topic to Microsoft</a></p>
</div>
<p style="text-align:left;font-family:Arial,sanserif;font-size:100%;color:black">
&#x00a9;&#x00a0;2016 Microsoft. All rights reserved.</p>

</body>
</html>
