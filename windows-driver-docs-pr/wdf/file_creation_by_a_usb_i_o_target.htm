<html xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns:mssdk="winsdk" xmlns:script="urn:script" xmlns:build="urn:build" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
<meta name="Description" content="File Creation by a USB I/O Target"/>
<meta name="MSHAttr" content="PreferredSiteName:MSDN"/>
<meta name="MSHAttr" content="PreferredLib:/library/windows/hardware"/>
<title>File Creation by a USB I/O Target</title>

<meta name="MS-HAID" content="umdfobjectdg_cc27a16b-02d0-4e96-937e-c92ae75b1fcd.xml"/>
<meta name="MS-HAID" content="umdf.file_creation_by_a_usb_i_o_target"/>
<meta name="MS-HAID" content="wdf.file_creation_by_a_usb_i_o_target"/>


<link rel="STYLESHEET" type="text/css" HREF="../common/backsdk4.css"/>


</head>
<body>

<div id="mainSection">
<div class="clsServerSDKContent">
<h1><a id="wdf.file_creation_by_a_usb_i_o_target"></a>File Creation by a USB I/O Target</h1>
</div>
<p class="CCE_Message">[This topic applies to UMDF 1.<i>x</i>.]</p>
<p>During its initialization, the USB I/O target creates an intra-stack file object, which represents a default session that the USB I/O target keeps open. For more information about an intra-stack file object, see <a href="creating_a_file_object_to_handle_i_o.htm">Creating a File Object to Handle I/O</a>. The USB I/O target or its USB pipe target children use this file object to send any I/O that they originate (for example, I/O to obtain the USB configuration descriptor).</p>
<p>The driver can use this intra-stack file object in format functions (for example, the driver can pass a pointer to this file object to the <i>pFile</i> parameter in a call to the <a href="wdf.iwdfiotarget_formatrequestforread"><b>IWDFIoTarget::FormatRequestForRead</b></a> method) if the driver must send I/O on this file object's default session. To obtain the intra-stack file object, the driver can call the <a href="wdf.iwdfiotarget_gettargetfile"><b>IWDFIoTarget::GetTargetFile</b></a> method.</p>
<p>This intra-stack file object is closed when the I/O target is disposed of either explicitly, when the driver calls the <a href="wdf.iwdfobject_deletewdfobject"><b>IWDFObject::DeleteWdfObject</b></a> method on the I/O target, or implicitly, when the I/O target's parent is disposed of.</p>
<p>If any I/O remains outstanding on this intra-stack file object at the time of device removal, this file object will fail to close, and UMDF will generate a driver stop. For more information, see <a href="creating_and_using_driver_created_file_objects.htm">Creating and Using Driver-Created File Objects</a>.</p>
<p> </p>
<p> </p>
<p><a href="mailto:wsddocfb@microsoft.com?subject=Documentation%20feedback [wdf\wdf]:%20File Creation by a USB I/O Target%20 RELEASE:%20(3/15/2016)&amp;body=%0A%0APRIVACY STATEMENT%0A%0AWe use your feedback to improve the documentation. We don't use your email address for any other purpose, and we'll remove your email address from our system after the issue that you're reporting is fixed. While we're working to fix this issue, we might send you an email message to ask for more info. Later, we might also send you an email message to let you know that we've addressed your feedback.%0A%0AFor more info about Microsoft's privacy policy, see http://privacy.microsoft.com/en-us/default.aspx." title="Send comments about this topic to Microsoft">Send comments about this topic to Microsoft</a></p>
</div>
<p style="text-align:left;font-family:Arial,sanserif;font-size:100%;color:black">
&#x00a9;&#x00a0;2016 Microsoft. All rights reserved.</p>

</body>
</html>
