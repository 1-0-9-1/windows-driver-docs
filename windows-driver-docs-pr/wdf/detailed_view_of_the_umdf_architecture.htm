<html xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns:mssdk="winsdk" xmlns:script="urn:script" xmlns:build="urn:build" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
<meta name="Description" content="This topic describes how the driver manager builds a user-mode device stack, and how the host process, reflector, and driver manager process an I/O request that an application sends to a User-Mode Driver Framework (UMDF) driver."/>
<meta name="MSHAttr" content="PreferredSiteName:MSDN"/>
<meta name="MSHAttr" content="PreferredLib:/library/windows/hardware"/>
<title>Architecture of UMDF</title>

<meta name="MS-HAID" content="umdfobjectdg_ff5f1b15-031f-4483-9bcd-ea6e63f22045.xml"/>
<meta name="MS-HAID" content="umdf.detailed_view_of_the_umdf_architecture"/>
<meta name="MS-HAID" content="wdf.detailed_view_of_the_umdf_architecture"/>


<link rel="STYLESHEET" type="text/css" HREF="../common/backsdk4.css"/>


</head>
<body>

<div id="mainSection">
<div class="clsServerSDKContent">
<h1><a id="wdf.detailed_view_of_the_umdf_architecture"></a>Architecture of UMDF</h1>
</div>
<p>This topic describes how the driver manager builds a user-mode device stack, and how the host process, reflector, and driver manager process an I/O request that an application sends to a User-Mode Driver Framework (UMDF) driver.</p>
<p>Similar to a kernel-mode stack, the construction and tear down of a user-mode stack is driven by Plug and Play (PnP) events. After the kernel-mode stack has been built, the reflector notifies the driver manager to start construction of the user-mode stack. The driver manager launches the driver host process and provides sufficient information to the launched process to build the user-mode stack. In this way, the user-mode stack can be considered an extension of the kernel-mode stack.</p>
<p> The driver host process provides the execution environment for user-mode drivers and routes messages between drivers in the  user-mode stack. The reflector uses a message-based interprocess communication mechanism to communicate with the driver manager and host process.</p><img src="images/umdfarch4.gif" alt="UMDF components including up and down device objects in reflector"/><p>To send an I/O request to a UMDF driver, an application calls a Win32 file I/O function, such as <a href="fs.createfile"><b>CreateFile</b></a>, <b>ReadFileEx</b>, <b>CancelIoEx</b>, or <a href="base.deviceiocontrol"><b>DeviceIoControl</b></a>.  When the reflector receives a request from the client application, it sends the request to the appropriate driver host process. The driver host process then routes the request to the top of the correct user-mode device stack.</p>
<p> The request is either completed by one of the drivers in the user-mode stack or forwarded by one of the drivers back to the reflector.  When the reflector receives a request from the user-mode driver stack, it sends the request down the kernel-mode stack for completion.</p>
<p> </p>
<p> </p>
<p><a href="mailto:wsddocfb@microsoft.com?subject=Documentation%20feedback [wdf\wdf]:%20Architecture of UMDF%20 RELEASE:%20(3/15/2016)&amp;body=%0A%0APRIVACY STATEMENT%0A%0AWe use your feedback to improve the documentation. We don't use your email address for any other purpose, and we'll remove your email address from our system after the issue that you're reporting is fixed. While we're working to fix this issue, we might send you an email message to ask for more info. Later, we might also send you an email message to let you know that we've addressed your feedback.%0A%0AFor more info about Microsoft's privacy policy, see http://privacy.microsoft.com/en-us/default.aspx." title="Send comments about this topic to Microsoft">Send comments about this topic to Microsoft</a></p>
</div>
<p style="text-align:left;font-family:Arial,sanserif;font-size:100%;color:black">
&#x00a9;&#x00a0;2016 Microsoft. All rights reserved.</p>

</body>
</html>
