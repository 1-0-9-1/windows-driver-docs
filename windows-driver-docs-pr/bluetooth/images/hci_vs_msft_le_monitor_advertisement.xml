<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../../BuildX/Script2/preview.xslt"?>
<refpage xmlns="http://microsoft.com/wdcml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://microsoft.com/wdcml ../../BuildX/Schema/xsd/wdcml.xsd">
 <metadata id="bltooth.hci_vs_msft_le_monitor_advertisement" type="refpage" msdnID="807A0C91-9BB1-4E09-9DD7-FA2713C2DB1C">
  <title>HCI_VS_MSFT_LE_Monitor_Advertisement</title>
  <devlang value="cpp"/>
  <tech value="bltooth"/>
  <index/>
  <seo nohighlight="1"/>
</metadata>
 <content>
  <desc>
   <p><abstract>HCI_VS_MSFT_LE_Monitor_Advertisement requests that the controller starts monitoring for advertisements that fall within the specified RSSI range and also satisfy one of the following conditions:</abstract></p><list><item>A specified pattern can be matched to the received advertisement packet.</item><item>A specified UUID can be matched to the received advertisement packet.</item><item>A specified Identity Resolution Key (IRK) can be used to resolve the private address of the device from which the advertisement packet originated.</item><item>A specified Bluetooth Address can be matched to the received advertisement packet.</item></list><table><tr><th>Command</th><th>Code</th><th>Command parameters</th><th>Return parameters</th></tr><tr><td><p>HCI_VS_MSFT_LE_Monitor_Advertisement</p></td><td><p>Chosen base code</p></td><td><p><placeholder>Subcommand_opcode</placeholder></p><p><placeholder>RSSI_threshold_high</placeholder></p><p><placeholder>RSSI_threshold_low</placeholder></p><p><placeholder>RSSI_threshold_low_time_interval</placeholder></p><p><placeholder>RSSI_sampling_period</placeholder></p><p><placeholder>Condition_type</placeholder></p><p><placeholder>Condition</placeholder></p></td><td><p><placeholder>Status</placeholder></p><p><placeholder>Subcommand_opcode</placeholder></p><p><placeholder>Monitor_handle</placeholder></p></td></tr></table><p>The controller shall generate a Command Complete event in response to this command. The status value should be set to zero if the controller can begin monitoring, or a non-zero status otherwise.</p><p>If the controller does not support RSSI monitoring for LE Advertisements, it shall ignore the <placeholder>RSSI_threshold_high</placeholder>, <placeholder>RSSI_threshold_low</placeholder>, <placeholder>RSSI_threshold_low_time_interval</placeholder>, and <placeholder>RSSI_sampling_period</placeholder> parameter values.</p>
  </desc>
  <section><title>State diagram</title><sectioncontents><p>This state diagram shows the transition states on the controller when monitoring RSSI for an advertisement.</p><img src="images/HCI_VS_MSFT_LE_Monitor_Advertisement_State_Diagram.png" alt="State diagram for HCI_VS_MSFT_LE_Monitor_Advertisement"></img><p>The controller shall propagate the first advertisement packet to the host only when the received RSSI is greater than or equal to <placeholder>RSSI_threshold_high</placeholder> for a particular device. The controller shall generate an <xref targtype="refpage" rid="bltooth.hci_vs_msft_le_monitor_device_event">HCI_VS_MSFT_LE_Monitor_Device_Event</xref> with <placeholder>Monitor_state</placeholder> set to 1 and <placeholder>Monitor_handle</placeholder> set to the handle for this <placeholder>Condition</placeholder>, to notify the host that the controller is monitoring this particular device for <placeholder>Condition</placeholder>.</p><p>The controller shall stop monitoring for <placeholder>Condition</placeholder> if the RSSI of the received advertisements equals or falls below  <placeholder>RSSI_threshold_low</placeholder> over <placeholder>RSSI_threshold_low_interval</placeholder> for the particular device. The controller shall generate an <xref targtype="refpage" rid="bltooth.hci_vs_msft_le_monitor_device_event">HCI_VS_MSFT_LE_Monitor_Device_Event</xref> with <placeholder>Monitor_state</placeholder> set to 0 to notify the host that the controller has stopped monitoring the particular device for the <placeholder>Condition</placeholder>. After the controller specifies the HCI_VS_MSFT_LE_Monitor_Device_Event with <placeholder>Monitor_state</placeholder> set to 0, the controller shall not allow further advertisement packets to flow to the host for the device until the controller has notified the host that the RSSI for the particular device has risen to or above <placeholder>RSSI_threshold_high</placeholder> for the particular device for the <placeholder>Condition</placeholder>.</p><p>Additionally, the controller shall generate an <xref targtype="refpage" rid="bltooth.hci_vs_msft_le_monitor_device_event">HCI_VS_MSFT_LE_Monitor_Device_Event</xref> with <placeholder>Monitor_state</placeholder> set to 0 to notify the host that the controller has stopped monitoring the device for the <placeholder>Condition</placeholder> if the specified <placeholder>RSSI_threshold_low_time_interval</placeholder> expires without receiving any advertising packets from the device. If the controller is monitoring a device for a particular condition, the following statements are true.</p><list><item>If <placeholder>RSSI_sampling_period</placeholder> is set to 0xFF, the controller shall not allow further advertisement packets to flow to the host for the device for the <placeholder>Condition</placeholder> until the controller has notified the host that the particular device’s RSSI has fallen below <placeholder>RSSI_threshold_low</placeholder> for <placeholder>RSSI_threshold_low_time_interval</placeholder> for the particular device for this <placeholder>Condition</placeholder>. This notification is done by generating an <xref targtype="refpage" rid="bltooth.hci_vs_msft_le_monitor_device_event">HCI_VS_MSFT_LE_Monitor_Device_Event</xref> with <placeholder>Monitor_state</placeholder> set to 0.</item><item>If the <placeholder>RSSI_sampling_period</placeholder> is set to 0x0, the controller shall propagate all received advertisement packets to the host for the device for this <placeholder>Condition</placeholder> unless the controller previously received an <xref targtype="refpage" rid="bltooth.hci_vs_msft_le_set_advertisement_filter_enable">HCI_VS_MSFT_LE_Set_Advertisement_Filter_Enable</xref> command with <placeholder>Enable</placeholder> set to 0x00. The controller shall propagate an advertisement packet to the host even if the received RSSI is less than or equal to <placeholder>RSSI_threshold_low</placeholder> as long as <placeholder>RSSI_threshold_low_time_interval</placeholder> has not expired for the particular device for this <placeholder>Condition</placeholder>. The RSSI value of this advertisement packet shall be the RSSI value of the received advertisement.</item></list><p>If <placeholder>RSSI_sampling_period</placeholder> is between 0x01 and 0xFE, the controller shall propagate advertisement packets to the host every <placeholder>RSSI_sampling_period</placeholder> specified unless the controller previously received an <xref targtype="refpage" rid="bltooth.hci_vs_msft_le_set_advertisement_filter_enable">HCI_VS_MSFT_LE_Set_Advertisement_Filter_Enable</xref> command with <placeholder>Enable</placeholder> set to 0x00. The RSSI value specified for the advertisement shall be the average of the RSSI value received during this sampling interval. If the controller does not receive an advertisement packet during the sampling period, it shall not propagate an advertisement to the host. It is possible that <placeholder>RSSI_sampling_period</placeholder> is less than <placeholder>RSSI_threshold_low_time_interval</placeholder> and all advertisements received during the <placeholder>RSSI_sampling_period</placeholder> have RSSI below <placeholder>RSSI_threshold_low</placeholder>. The controller shall still propagate the advertisement with the average of the RSSI value received during this sampling interval.</p><p>If the controller previously received an <xref targtype="refpage" rid="bltooth.hci_vs_msft_le_set_advertisement_filter_enable">HCI_VS_MSFT_LE_Set_Advertisement_Filter_Enable</xref> command with <placeholder>Enable</placeholder> set to 0x00, the sampling period timer shall not be stopped. See <xref targtype="ovw" rid="bltooth.example__hci_vs_msft_le_set_advertisement_filter_enable_on_filters_with_sampling_period">Example: HCI_VS_MSFT_LE_Set_Advertisement_Filter_Enable on filters with sampling period</xref> for more information.</p><p>If the controller receives non-duplicate advertisement packets from the same device, it shall match each advertisement packet against the Conditions stored on the controller.</p><p>If the controller receives an advertisement packet from a device that matches multiple Conditions, then the controller shall generate an <xref targtype="refpage" rid="bltooth.hci_vs_msft_le_monitor_device_event">HCI_VS_MSFT_LE_Monitor_Device_Event</xref> for each <placeholder>Condition</placeholder> that matched, with <placeholder>Monitor_handle</placeholder> set to the <placeholder>Condition</placeholder> that matched.</p><p>If the controller is unable to monitor the RSSI values for all devices in range that match the <placeholder>Condition</placeholder>, it will keep monitoring as many devices as it can. The decision on what devices should be monitored will depend on the RSSI values of the received advertisements. The controller shall monitor devices with the greater received signal strength.</p><p>If the controller has notified the host about a particular device (<placeholder>A</placeholder>) and it is monitoring devices at maximum hardware capacity, and if another device (<placeholder>B</placeholder>) comes into range with a higher RSSI value, then the controller shall notify the host that it has stopped monitoring the device (<placeholder>A</placeholder>) by generating an <xref targtype="refpage" rid="bltooth.hci_vs_msft_le_monitor_device_event">HCI_VS_MSFT_LE_Monitor_Device_Event</xref> with <placeholder>Monitor_state</placeholder> set to 0. The controller shall also generate an HCI_VS_MSFT_LE_Monitor_Device_Event with <placeholder>Monitor_state</placeholder> set to 1 to notify the host that the device (<placeholder>B</placeholder>) is now being monitored.</p></sectioncontents></section><section><title><placeholder>Condition_type</placeholder> and <placeholder>Condition</placeholder> parameters</title><sectioncontents><p>The <placeholder>Condition_type</placeholder> parameter specifies whether the <placeholder>Condition</placeholder> parameter specifies a pattern, UUID, IRK, or BD_ADDR.</p><p>If the <placeholder>Condition_type</placeholder> parameter specifies a pattern, the <placeholder>Condition</placeholder> contains 2 sections which contain the number of patterns present within the <placeholder>Condition</placeholder>, and the pattern data.</p><img src="images/HCI_VS_MSFT_LE_Monitor_Advertisement_Conditions.png" alt="Pattern condition data layout"></img><list nobullets="1"><item><placeholder>Number of Patterns</placeholder> specifies the number of patterns that need to be matched.</item><item><placeholder>Pattern Data</placeholder> has the following format.<list><item><placeholder>Length</placeholder> specifies the length of this pattern include the data type and start byte of the pattern.</item><item><placeholder>AD Type</placeholder> specifies the AD Type field</item><item><placeholder>Start of Pattern</placeholder> specifies the starting byte position of the pattern immediately following AD Type.</item><item><placeholder>Pattern</placeholder> has a size of (<placeholder>Length</placeholder> - 0x2) and is the pattern to be matched for the specified AD Type within the advertisement packet from the specified starting byte.</item></list></item></list><p>If there are multiple patterns specified, the controller shall ensure that at least one pattern matches the received advertisement.</p><p>If the <placeholder>Condition_type</placeholder> parameter specifies a UUID, the <placeholder>Condition</placeholder> parameter contains a UUID Type and a UUID. The UUID Type specifies whether the UUID is 16-bit, 32-bit, or 128-bit. The controller shall parse the Service UUID of the advertisement packet to check for the specified UUID. If UUID Type is defined as 0x01, the controller shall parse the Incomplete List of 16-bit service UUIDs and complete list of 16-bit service UUIDs specified in the Service UUID AD Type. If the UUID Type is defined as 0x02, the controller shall parse the Incomplete List of 32-bit service UUIDs and complete list of 32-bit UUIDs specified in the Service UUID AD Type. If the UUID Type specified is 0x03, the controller shall parse the Incomplete List of 128-bit Service UUIDs and complete list of 128-bit Service UUIDs specified in the Service UUID AD Type.</p><p>If the <placeholder>Condition_type</placeholder> parameter specifies an IRK, the <placeholder>Condition</placeholder> parameter contains the IRK.</p><p>If the <placeholder>Condition_type</placeholder> parameter specifies a Bluetooth Address, the <placeholder>Condition</placeholder> parameter contains the address type and BD_ADDR.</p><p>The controller shall keep monitoring based on the conditions, even when scanning (Active or Passive) is enabled.</p><p>When active scanning is enabled, the scan response for an advertisement matching a filter shall be propagated to the host.</p><p>If the controller receives a HCI_VS_MSFT_LE_Monitor_Advertisement command when the filters are disabled (due to  a previously received <xref targtype="refpage" rid="bltooth.hci_vs_msft_le_set_advertisement_filter_enable">HCI_VS_MSFT_LE_Set_Advertisement_Filter_Enable</xref> command with <placeholder>Enable</placeholder> set to 0x00), the controller shall accept the command if it can, but set it to a disabled state.</p><p>The controller may also refuse the command for other reasons such as resource exhaustion.</p></sectioncontents></section><section><title>Command parameters</title><sectioncontents><list nobullets="1"><item><p><mark type="bullet_intro"><placeholder>Subcommand_opcode</placeholder></mark> (1 octet):</p><table><tr><th>Value</th><th>Parameter description</th></tr><tr><td><p>0x03</p></td><td><p>The subcommand opcode for HCI_VS_MSFT_LE_Monitor_Advertisement.</p></td></tr></table></item><item><p><mark type="bullet_intro"><placeholder>RSSI_threshold_high</placeholder></mark> (1 octet):</p><table><tr><th>Value</th><th>Parameter description</th></tr><tr><td><p xml:space="default"><mark type="param">High<entity type="nbsp"/>RSSI threshold<entity type="nbsp"/>value</mark></p></td><td><p>The maximum expected RSSI value. The controller will generate an event if the observed RSSI becomes greater than or equal to this value.</p><list><item>Range: -127 to 20 (signed integer)</item><item>Unit: dBm</item></list></td></tr></table></item><item><p><mark type="bullet_intro"><placeholder>RSSI_threshold_low</placeholder></mark> (1 octet):</p><table><tr><th>Value</th><th>Parameter description</th></tr><tr><td><p xml:space="default"><mark type="param">Low<entity type="nbsp"/>RSSI threshold<entity type="nbsp"/>value</mark></p></td><td><p>The minimum expected RSSI value. The controller will generate an event if the observed RSSI becomes less than or equal to this value.</p><list><item>Range: -127 to 20 (signed integer)</item><item>Unit: dBm</item></list></td></tr></table></item><item><p><mark type="bullet_intro"><placeholder>RSSI_threshold_low_time_interval</placeholder></mark> (1 octet):</p><table><tr><th>Value</th><th>Parameter description</th></tr><tr><td><p>0x00</p></td><td><p>Reserved value.</p></td></tr><tr><td><p xml:space="preserve"><placeholder>N</placeholder><entity type="nbsp"/>=<entity type="nbsp"/>0x01<entity type="nbsp"/>-<entity type="nbsp"/>0x3C</p></td><td><p>Time period = <placeholder>N</placeholder> * 1 second</p><p>The time in seconds over which the RSSI value should be below <placeholder>RSSI_threshold_low</placeholder> before an <xref targtype="refpage" rid="bltooth.hci_vs_msft_rssi_event">HCI_VS_MSFT_Rssi_Event</xref> is generated.</p></td></tr></table></item><item><p><mark type="bullet_intro"><placeholder>RSSI_sampling_period</placeholder></mark> (1 octet):</p><table><tr><th>Value</th><th>Parameter description</th></tr><tr><td><p>0x00</p></td><td><p>The controller should propagate all received advertisements matching the specified condition to the host.</p></td></tr><tr><td><p xml:space="preserve"><placeholder>N</placeholder><entity type="nbsp"/>=<entity type="nbsp"/>0x01<entity type="nbsp"/>-<entity type="nbsp"/>0xFE</p></td><td><p>Time period = <placeholder>N</placeholder> * 100 milliseconds</p><p>The sampling interval in milliseconds.</p></td></tr><tr><td><p>0xFF</p></td><td><p>The controller should not propagate any of the received advertisements to the host.</p></td></tr></table></item><item><p><mark type="bullet_intro"><placeholder>Condition_type</placeholder></mark> (1 octet):</p><table><tr><th>Value</th><th>Parameter description</th></tr><tr><td><p>0x01</p></td><td><p>The condition is a pattern that has to be matched on the advertisement.</p></td></tr><tr><td><p xml:space="preserve">0x02</p></td><td><p>The condition is a UUID Type and a UUID.</p></td></tr><tr><td><p>0x03</p></td><td><p>The condition is the resolution of an IRK.</p></td></tr><tr><td><p>0x04</p></td><td><p>The condition is a Bluetooth address.</p></td></tr></table></item><item><p><mark type="bullet_intro"><placeholder>Condition</placeholder></mark>:</p><p>The applicable fields for <placeholder>Condition</placeholder> depends on the value of <placeholder>Condition_type</placeholder>. See the <placeholder>Condition_type and Condition parameters</placeholder> section for more information.</p><list nobullets="1"><item><p><mark type="bullet_intro"><placeholder>Number_of_patterns</placeholder></mark> (1 octet):</p><table><tr><th>Value</th><th>Parameter description</th></tr><tr><td><p>0x<placeholder>XX</placeholder></p></td><td><p>The number of patterns specified within the <placeholder>Pattern_data</placeholder> parameter.</p></td></tr></table></item><item><p><mark type="bullet_intro"><placeholder>Pattern_data</placeholder></mark> (&gt;3 octets):</p><table><tr><th>Value</th><th>Parameter description</th></tr><tr><td><p><placeholder>Length</placeholder></p></td><td><p>Length of this pattern.</p></td></tr><tr><td><p xml:space="preserve"><placeholder>Data type</placeholder></p></td><td><p>Data Type of the advertisement section. The values are listed in the Bluetooth Assigned Numbers document.</p></td></tr><tr><td><p><placeholder>Start byte</placeholder></p></td><td><p>Starting position of the pattern to be matched for the specified Data Type.</p></td></tr><tr><td><p><placeholder>Pattern</placeholder></p></td><td><p>Pattern to be matched (size of <placeholder>Length</placeholder> – 0x2 bytes).</p></td></tr></table></item><item><p><mark type="bullet_intro"><placeholder>UUID_type</placeholder></mark> (1 octet):</p><table><tr><th>Value</th><th>Parameter description</th></tr><tr><td><p>0x01</p></td><td><p>The UUID is a 16-bit service.</p></td></tr><tr><td><p xml:space="preserve">0x02</p></td><td><p>The UUID is a 32-bit service.</p></td></tr><tr><td><p>0x03</p></td><td><p>The UUID is a 128-bit service.</p></td></tr></table></item><item><p><mark type="bullet_intro"><placeholder>UUID</placeholder></mark> (2, 4, or 16 octets):</p><table><tr><th>Value</th><th>Parameter description</th></tr><tr><td><p>0x<placeholder>XXXX</placeholder></p></td><td><p>2 bytes if <placeholder>UUID_type</placeholder> is 0x01.</p><p>4 bytes if <placeholder>UUID_type</placeholder> is 0x02.</p><p>16 bytes if <placeholder>UUID_type</placeholder> is 0x03.</p></td></tr></table></item><item><p><mark type="bullet_intro"><placeholder>IRK</placeholder></mark> (16 octets):</p><table><tr><th>Value</th><th>Parameter description</th></tr><tr><td><p>0x<placeholder>XXXXXXXX XXXXXXXX</placeholder></p><p><placeholder>XXXXXXXX XXXXXXXX</placeholder></p></td><td><p>The IRK to be used to resolve the private address.</p></td></tr></table></item><item><p><mark type="bullet_intro"><placeholder>Address_type</placeholder></mark> (1 octet):</p><table><tr><th>Value</th><th>Parameter description</th></tr><tr><td><p>0x00</p></td><td><p>Public Device Address.</p></td></tr><tr><td><p xml:space="preserve">0x01</p></td><td><p>Random Device Address.</p></td></tr><tr><td><p xml:space="preserve">0x02<entity type="nbsp"/>-<entity type="nbsp"/>0xFF</p></td><td><p>Reserved values for future use.</p></td></tr></table></item><item><p><mark type="bullet_intro"><placeholder>BD_ADDR</placeholder></mark> (6 octets):</p><table><tr><th>Value</th><th>Parameter description</th></tr><tr><td><p>0x<placeholder>XXXXXXXXXXXX</placeholder></p></td><td><p>The Bluetooth address of the device to be monitored.</p></td></tr></table></item></list></item></list></sectioncontents></section><section><title>Return parameters</title><sectioncontents><list nobullets="1"><item><p><mark type="bullet_intro"><placeholder>Status</placeholder></mark> (1 octet):</p><table><tr><th>Value</th><th>Parameter description</th></tr><tr><td><p>0x00</p></td><td><p>The command succeeded.</p></td></tr><tr><td><p>0x07</p></td><td><p>The controller shall return <placeholder>Memory Capacity Exceeded</placeholder> if it does not have enough memory to process the command.</p></td></tr><tr><td><p xml:space="preserve"><mark type="param">Error<entity type="nbsp"/>code</mark></p></td><td><p>The command failed. See <placeholder>Error Codes</placeholder> in the Bluetooth Core specification for details.</p></td></tr></table></item><item><p><mark type="bullet_intro"><placeholder>Subcommand_opcode</placeholder></mark> (1 octet):</p><table><tr><th>Value</th><th>Parameter description</th></tr><tr><td>0x03</td><td>The subcommand opcode for HCI_VS_MSFT_LE_Monitor_Advertisement.</td></tr></table></item><item><p><mark type="bullet_intro"><placeholder>Monitor_handle</placeholder></mark> (1 octet):</p><table><tr><th>Value</th><th>Parameter description</th></tr><tr><td><p xml:space="preserve">0x00<entity type="nbsp"/>-<entity type="nbsp"/>0xFF</p></td><td><p>The handle to this rule. This handle is used as a parameter for <xref targtype="refpage" rid="bltooth.hci_vs_msft_le_cancel_monitor_advertisement">HCI_VS_MSFT_LE_Cancel_Monitor_Advertisement</xref> to  cancel monitoring the advertisement.</p><p>This parameter is only valid if <placeholder>Status</placeholder> is 0x00.</p></td></tr></table></item></list></sectioncontents></section><section><title>Events generated (unless masked away)</title><sectioncontents><p>When the HCI_VS_MSFT_LE_Monitor_Advertisement command is received, the controller shall generate a Command Complete event.</p></sectioncontents></section><seealso><xref targtype="refpage" rid="bltooth.hci_vs_msft_le_set_advertisement_filter_enable">HCI_VS_MSFT_LE_Set_Advertisement_Filter_Enable</xref><xref targtype="refpage" rid="bltooth.hci_vs_msft_le_cancel_monitor_advertisement">HCI_VS_MSFT_LE_Cancel_Monitor_Advertisement</xref><xref targtype="refpage" rid="bltooth.hci_vs_msft_le_monitor_device_event">HCI_VS_MSFT_LE_Monitor_Device_Event</xref></seealso>
  <info><product rid="version">Supported in <tla rid="win_threshold_desktop" expansion="always"/>,  <tla rid="win_threshold_mobile" expansion="first_use_only"/>, and later versions.</product></info>
 </content>
  </refpage>
